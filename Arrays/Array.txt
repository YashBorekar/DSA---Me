What is array?
Arrays are used to store multiple values of same datatype in a single variable, instead of declaring separate variables for each value.
o declare an array, define the variable type, specify the name of the array followed by square brackets and specify the number of elements it should store:

- Continuous memory is allocated to the array elements

               0    1   2  <--- index of elements
int arr[3] = {100,1121,1564}; -> address
              11   12   13 <- continuous address allocation
              

string cars[4];
We have now declared a variable that holds an array of four strings. To insert values to it, we can use an array literal - place the values in a comma-separated list, inside curly braces:

string cars[4] = {"Volvo", "BMW", "Ford", "Mazda"};
To create an array of three integers, you could write:

int myNum[3] = {10, 20, 30};
Access the Elements of an Array
You access an array element by referring to the index number inside square brackets [].

This statement accesses the value of the first element in cars:

Example
string cars[4] = {"Volvo", "BMW", "Ford", "Mazda"};
cout << cars[0];
// Outputs Volvo

Creating an Array -

Declaration :
   datatype array_name [size] ;
   Ex- int num[10]; it will create space for 10 integer elements.
index ->        0  1  2  3  4  5  6  7  8  9     0-based indexing  
memory -        [] [] [] [] [] [] [] [] [] [] 
address->       10 11 12 13 14 15 16 17 18 19           

num will point to the base address - 10

initialisation :
   num = {121,4,54,65,465,45,12,5,765,412165};

// Operating System - Fragmentation  (storage wastage in continuous memory locations)

Behind the scenes :
int ans = 12;

(handle by compiler) Symbol table - It is used to store variable names 
which further maps to the address where exact value of variable is stored

ans -> symbol table
12 -> memory


// address of array
cout<<arrayname OR cout<<&array_name

// 0-based inedxing why?

Ex- int arr[] = {1,2,3,4};
      index=     0    1    2    3
                [1]  [2]  [3]  [4]
      address  104  108  112  116   
logic - arrayname+index*datatype_size;
arr[0] 
- arr+0*4;  // size of int - 4
- 104+0     // cout<<arr - 104 our predicted address
- 104;  --> it will point to 104 locations

arr[1] 
- arr+1*4;  
- 104+4    
- 108;  --> it will point to 108 location

